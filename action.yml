name: 'Lintic - Automated Linting Fixes'
description: 'Automatically fix linting errors in Ruby files using AI'
author: 'Lintic Team'

inputs:
  github-token:
    description: 'GitHub token for API access'
    required: true
    default: ${{ github.token }}
  ollama-model:
    description: 'Ollama model to use for AI fixes'
    required: false
    default: 'qwen2.5-coder:1.5b'
  ruby-version:
    description: 'Ruby version to use'
    required: false
    default: '3.1'
  skip-install:
    description: 'Skip Ollama installation (if already available)'
    required: false
    default: 'false'

outputs:
  fixes-applied:
    description: 'Number of files that were fixed'
    value: ${{ steps.run-lintic.outputs.fixes-applied }}
  pr-created:
    description: 'URL of the created fix PR (if any)'
    value: ${{ steps.run-lintic.outputs.pr-url }}

runs:
  using: 'composite'
  steps:
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ inputs.ruby-version }}

    - name: Install Ruby dependencies
      shell: bash
      run: |
        gem install dotenv octokit ruby-openai rubocop

    - name: Set up Ollama
      if: inputs.skip-install != 'true'
      shell: bash
      run: |
        if ! command -v ollama &> /dev/null; then
          curl -fsSL https://ollama.ai/install.sh | sh
        fi

        # Start Ollama in background
        ollama serve &
        OLLAMA_PID=$!
        echo "OLLAMA_PID=$OLLAMA_PID" >> $GITHUB_ENV

        # Wait for Ollama to be ready
        echo "Waiting for Ollama to start..."
        for i in {1..30}; do
          if curl -f http://localhost:11434/api/tags >/dev/null 2>&1; then
            echo "Ollama is ready!"
            break
          fi
          sleep 2
        done

        # Pull the model
        ollama pull ${{ inputs.ollama-model }}

    - name: Run Lintic
      id: run-lintic
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        GITHUB_REPO: ${{ github.repository }}
        GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
        OLLAMA_MODEL: ${{ inputs.ollama-model }}
        OLLAMA_URI: http://localhost:11434/v1/
      run: |
        # Copy the Lintic script to current directory
        cp ${{ github.action_path }}/main.rb ./lintic.rb

        # Run Lintic and capture output
        OUTPUT=$(ruby lintic.rb 2>&1)
        echo "$OUTPUT"

        # Extract metrics (simple parsing)
        FIXES_APPLIED=$(echo "$OUTPUT" | grep -o "Successfully processed [0-9]\+ files" | grep -o "[0-9]\+" || echo "0")
        PR_URL=$(echo "$OUTPUT" | grep -o "https://github.com/.*/pull/[0-9]\+" || echo "")

        echo "fixes-applied=$FIXES_APPLIED" >> $GITHUB_OUTPUT
        echo "pr-url=$PR_URL" >> $GITHUB_OUTPUT

    - name: Cleanup
      if: always()
      shell: bash
      run: |
        if [ ! -z "$OLLAMA_PID" ]; then
          kill $OLLAMA_PID 2>/dev/null || true
        fi

branding:
  icon: 'zap'
  color: 'green'
